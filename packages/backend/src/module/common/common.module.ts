import { Global, Module } from '@nestjs/common';import { ConfigModule, ConfigService } from '@nestjs/config';import { JwtModule } from '@nestjs/jwt';import { ScheduleModule } from '@nestjs/schedule';import { TypeOrmModule } from '@nestjs/typeorm';import { Users } from '../../db/models';import { JWTAuthGuard } from './guards';@Global()@Module({  imports: [    ConfigModule?.forRoot({      envFilePath: ['.env', '.env.local'],      isGlobal: true    }),    TypeOrmModule.forRoot({      url: process.env.DATABASE_URL,      logging: ['query', 'error'],      type: 'postgres',      entities: [Users],      migrations: ['dist/db/migrations/**/*.{ts,js}'],      subscribers: ['src/db/subscriber/**/*.ts'],      synchronize: true    }),    JwtModule.register({      secret: process.env.JWT_SECRET,      signOptions: { expiresIn: '1d' }    }),    ScheduleModule.forRoot()  ],  providers: [ConfigModule, ConfigService, JWTAuthGuard],  exports: [JwtModule, ConfigModule, ConfigService, JWTAuthGuard, ConfigService]})export class CommonModule {}