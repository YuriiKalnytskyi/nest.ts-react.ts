import { Global, Module } from '@nestjs/common';import { ConfigModule, ConfigService } from '@nestjs/config';import { JwtModule } from '@nestjs/jwt';import { ScheduleModule } from '@nestjs/schedule';import { SequelizeModule } from '@nestjs/sequelize';import dbConfig from '../../db/config/db.config';import { JWTAuthGuard } from './guards';@Global()@Module({  imports: [    ConfigModule.forRoot({      envFilePath: '.env',      isGlobal: true,      load: [dbConfig]    }),    SequelizeModule.forRootAsync({      useFactory: async (config: ConfigService) => ({        ...config.get('database')      }),      inject: [ConfigService]    }),    JwtModule.register({      secret: process.env.JWT_SECRET,      signOptions: { expiresIn: '1d' }    }),    ScheduleModule.forRoot()  ],  providers: [ConfigModule, ConfigService, JWTAuthGuard],  exports: [JwtModule, ConfigModule, ConfigService, JWTAuthGuard, ConfigService]})export class CommonModule {}