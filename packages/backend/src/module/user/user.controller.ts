import { Body, Param } from '@nestjs/common';import { ApiAuthDelete, ApiController, ApiPost } from '../common/decorators';import { IdDTO, TokenDTO } from '../common/dtos';import { EAppRoles } from '../common/types';import { CredLogUserDTO, CredSignUserDTO, SocialDTO } from './dto';import { UserService } from './user.service';@ApiController('user')export class UserController {  constructor(private userAuthService: UserService) {}  @ApiPost('sign-up/social-media', 'sing in user via social media', TokenDTO)  async logInSocial(@Body() data: SocialDTO): Promise<TokenDTO> {    const res = await this.userAuthService.signInMedia(data);    return this.userAuthService.generateToken({      role: EAppRoles.USER,      ...res    });  }  @ApiPost('sign-in/credentials', 'sing in via credentials', TokenDTO)  async logInCred(@Body() data: CredLogUserDTO): Promise<TokenDTO> {    const res = await this.userAuthService.signInCredentials(data);    return this.userAuthService.generateToken({      role: EAppRoles.USER,      ...res    });  }  @ApiPost('sign-up/credentials', 'sign up via credentials', TokenDTO)  async logUpCred(@Body() data: CredSignUserDTO) {    const res = await this.userAuthService.signUpCredentials(data);    return this.userAuthService.generateToken({      role: EAppRoles.USER,      ...res    });  }  @ApiPost('delete-user1', 'delete  user', IdDTO)  async deleteMain(@Body() data: { id: string }): Promise<IdDTO> {    return await this.userAuthService.deleteUser(data.id);  }  @ApiAuthDelete('delete-user/:id', 'delete  user', IdDTO, [EAppRoles.USER])  async deleteMain2(@Param('id') id: string): Promise<IdDTO> {    return await this.userAuthService.deleteUser(id);  }}